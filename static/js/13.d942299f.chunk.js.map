{"version":3,"file":"static/js/13.d942299f.chunk.js","mappings":"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","sources":["Services/movies-service.js","components/Casts/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'cba4a9d06446c18bc3af1e3af31e1bf6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get('trending/all/day');\n  return response.data;\n};\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`);\n  return response.data;\n};\nexport const getActorsDetails = async id => {\n  // 'https://api.themoviedb.org/3/movie/movie_id/credits?language=en-US', options)\n  const response = await axios.get(`movie/${id}/credits`);\n  return response.data;\n};\nexport const getMovieReviews = async id => {\n  // 'https://api.themoviedb.org/3/movie/movie_id/reviews?language=en-US&page=1', options)\n  const response = await axios.get(`movie/${id}/reviews`);\n  return response.data;\n};\nexport const searchMovie = async query => {\n  //  ('https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1');\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&page=1`\n  );\n  return response.data;\n};\n","import { getActorsDetails } from 'Services/movies-service';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReactLoading from 'react-loading';\n\nconst Cast = () => {\n  const [movieActors, setMovieActors] = useState([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoadaing] = useState(false);\n  const { id } = useParams();\n  useEffect(() => {\n    setIsLoadaing(true);\n    const movieCasts = async () => {\n      try {\n        const response = await getActorsDetails(id);\n        setMovieActors(response.cast);\n        !response.cast.length ? setIsError(true) : setIsError(false);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoadaing(false);\n      }\n    };\n    movieCasts();\n  }, [id]);\n  // const defaultImg =\n  //   'https://image.tmdb.org/t/p/w500/$%7BmovieData.poster_path%7D';\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <div className=\"my-3\">\n      {isLoading && <ReactLoading type=\"spin\" color=\"black\" />}\n      {movieActors.length > 0 && (\n        <ul>\n          {movieActors.map(({ name, id, profile_path, character }) => (\n            <li key={id} className=\"py-3\">\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : defaultImg\n                }\n                width={250}\n                alt=\"poster\"\n                className=\"mb-2\"\n              />\n              <h4 className=\"mb-2\">{name}</h4>\n              <h5>Character: {character}</h5>\n            </li>\n          ))}\n        </ul>\n      )}\n      {isError && <div>We don`t have casts for this movie</div>}\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["axios","api_key","language","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","stop","apply","arguments","getMovieDetails","_ref2","_callee2","id","_context2","concat","_x","getActorsDetails","_ref3","_callee3","_context3","_x2","getMovieReviews","_ref4","_callee4","_context4","_x3","searchMovie","_ref5","_callee5","query","_context5","_x4","_useState","useState","_useState2","_slicedToArray","movieActors","setMovieActors","_useState3","_useState4","isError","setIsError","_useState5","_useState6","isLoading","setIsLoadaing","useParams","useEffect","movieCasts","cast","length","t0","finish","_jsxs","className","children","_jsx","ReactLoading","type","color","map","name","profile_path","character","src","width","alt"],"sourceRoot":""}